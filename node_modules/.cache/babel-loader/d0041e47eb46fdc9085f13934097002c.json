{"ast":null,"code":"var _jsxFileName = \"/Users/agusandriputra/Documents/api_react_app/src/Home.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://ghibliapi.herokuapp.com/films\").then(res => res.data).then(parsedJSON => {\n      return parsedJSON.map(data => ({\n        id: \"\".concat(data.id),\n        description: \"\".concat(data.description)\n      }));\n    }).then(items => this.setState({\n      items: [...this.state.items.slice(0, 0), ...items],\n      isLoaded: false\n    })).catch(error => console.log('parsing failed', error));\n  }\n\n  render() {\n    const items = this.state.items;\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"boxWhite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Random User\"), (items || []).length > 0 ? items.map(item => {\n      const id = item.id,\n            description = item.description;\n      return React.createElement(\"div\", {\n        key: id,\n        className: \"bgCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ctr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, description));\n    }) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/agusandriputra/Documents/api_react_app/src/Home.js"],"names":["React","Component","axios","Home","constructor","props","state","items","componentDidMount","get","then","res","data","parsedJSON","map","id","description","setState","slice","isLoaded","catch","error","console","log","render","length","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC1CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBN,IAAAA,KAAK,CAACO,GAAN,CAAU,uCAAV,EACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IADnB,EAEGF,IAFH,CAEQG,UAAU,IAAI;AAClB,aAAOA,UAAU,CAACC,GAAX,CAAeF,IAAI,KACxB;AACEG,QAAAA,EAAE,YAAKH,IAAI,CAACG,EAAV,CADJ;AAEEC,QAAAA,WAAW,YAAKJ,IAAI,CAACI,WAAV;AAFb,OADwB,CAAnB,CAAP;AAMD,KATH,EAUGN,IAVH,CAUQH,KAAK,IAAI,KAAKU,QAAL,CAAc;AAC3BV,MAAAA,KAAK,EAAE,CACL,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBW,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CADE,EAEL,GAAGX,KAFE,CADoB;AAK3BY,MAAAA,QAAQ,EAAE;AALiB,KAAd,CAVjB,EAiBGC,KAjBH,CAiBSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,CAjBlB;AAkBD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACCjB,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEPe,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGI,CAACC,KAAK,IAAI,EAAV,EAAckB,MAAd,GAAuB,CAAvB,GAA2BlB,KAAK,CAACO,GAAN,CAAUY,IAAI,IAAI;AAAA,YACnCX,EADmC,GACfW,IADe,CACnCX,EADmC;AAAA,YAC/BC,WAD+B,GACfU,IADe,CAC/BV,WAD+B;AAE3C,aAEE;AAAK,QAAA,GAAG,EAAED,EAAV;AAAc,QAAA,SAAS,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,WADH,CAFF,CAFF;AAUD,KAZ0B,CAA3B,GAYK,IAfT,CADF;AAqBD;;AArDyC","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://ghibliapi.herokuapp.com/films\")\n      .then(res => res.data)\n      .then(parsedJSON => {\n        return parsedJSON.map(data =>(\n          {\n            id: `${data.id}`,\n            description: `${data.description}`\n          }\n        ))\n      })\n      .then(items => this.setState({\n        items: [\n          ...this.state.items.slice(0, 0),\n          ...items,\n        ],\n        isLoaded: false\n      }))\n      .catch(error => console.log('parsing failed', error))\n  }\n\n  render() {\n    const { items } = this.state;\n    console.log(this.state);\n    return (\n      <div className=\"boxWhite\">\n        <h2>Random User</h2>\n        {\n          (items || []).length > 0 ? items.map(item => {\n            const { id, description } = item;\n            return (\n\n              <div key={id} className=\"bgCircle\">\n                {/* <center><img src={thumbnail} alt={description} className=\"circle\" /> </center><br /> */}\n                <div className=\"ctr\">\n                  {description}\n                </div>\n\n              </div>\n            );\n          }) : null\n        }\n      </div>\n    );\n\n  }\n}"]},"metadata":{},"sourceType":"module"}